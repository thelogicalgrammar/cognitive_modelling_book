install.packages('bookdown')
bookdown::html_book()
bookdown::render_book('.', 'bookdown::gitbook')
n.stimuli <- 100
# all combinations of numbers from 1 up to (and including) the n.stimuli.
borders <- expand.grid(c(1:n.stimuli), c(1:n.stimuli))
# change row names
# lb for 'lower bound' and ub for 'upper bound'
colnames(borders) <- c('lb', 'ub')
# only keep those categories where the lower bound is lower
# or equal to the upper bound
borders <- borders[borders[,1]<=borders[,2],]
# reset the row names
row.names(borders) <- c(1:nrow(borders))
print(borders[:,1:10])
# all combinations of numbers from 1 up to (and including) the n.stimuli.
borders <- expand.grid(c(1:n.stimuli), c(1:n.stimuli))
# change row names
# lb for 'lower bound' and ub for 'upper bound'
colnames(borders) <- c('lb', 'ub')
# only keep those categories where the lower bound is lower
# or equal to the upper bound
borders <- borders[borders[,1]<=borders[,2],]
# reset the row names
row.names(borders) <- c(1:nrow(borders))
print(borders[,1:10])
# all combinations of numbers from 1 up to (and including) the n.stimuli.
borders <- expand.grid(c(1:n.stimuli), c(1:n.stimuli))
# change row names
# lb for 'lower bound' and ub for 'upper bound'
colnames(borders) <- c('lb', 'ub')
# only keep those categories where the lower bound is lower
# or equal to the upper bound
borders <- borders[borders[,1]<=borders[,2],]
# reset the row names
row.names(borders) <- c(1:nrow(borders))
print(borders)
# all combinations of numbers from 1 up to (and including) the n.stimuli.
borders <- expand.grid(c(1:n.stimuli), c(1:n.stimuli))
# change row names
# lb for 'lower bound' and ub for 'upper bound'
colnames(borders) <- c('lb', 'ub')
# only keep those categories where the lower bound is lower
# or equal to the upper bound
borders <- borders[borders[,1]<=borders[,2],]
# reset the row names
row.names(borders) <- c(1:nrow(borders))
head(borders)
bookdown::render_book('.', 'bookdown::gitbook')
bookdown::render_book('.', 'bookdown::gitbook')
bookdown::render_book('.', 'bookdown::gitbook')
bookdown::render_book('.', 'bookdown::gitbook')
bookdown::serve_book()
install.packages('servr')
bookdown::serve_book()
install.packages('bookdown')
knit_with_parameters('C:/Users/faust/Dropbox/website/thelogicalgrammar.github.io/assets/labs_book/index.Rmd')
render_book()
bookdown::render_book()
bookdown::render_book(output_format = bookdown::gitbook())
Y
y
bookdown::render_book(output_format = bookdown::gitbook
)
bookdown::render_book(output_format = bookdown::gitbook)
bookdown::render_book(output_format = bookdown::gitbook())
file.create('.nojekyll')
file.create('_bookdown.yml')
file.create('_bookdown.yml')
bookdown::render_book(output_format = bookdown::gitbook())
bookdown::render_book(output_format = bookdown::gitbook())
bookdown::render_book(output_format = bookdown::gitbook())
bookdown::render_book(output_format = bookdown::gitbook())
bookdown::render_book(output_format = bookdown::gitbook())
bookdown::render_book(output_format = bookdown::gitbook())
bookdown::render_book(output_format = bookdown::gitbook())
bookdown::render_book(output_format = bookdown::gitbook())
bookdown::render_book(output_format = bookdown::gitbook())
bookdown::render_book(output_format = bookdown::gitbook())
bookdown::render_book(output_format = bookdown::gitbook())
bookdown::render_book(output_format = bookdown::gitbook())
bookdown::render_book(output_format = "bookdown::gitbook")
position <- rnorm()
position <- rnorm(1)
unnormalized.pdf(0.1)
unnormalized.pdf <- function(x){
return(exp(-0.5 ( (x - mu) / sigma)^2))
}
unnormalized.pdf(0.1)
unnormalized.pdf <- function(x){
density <- exp(-0.5 * ( (x - mu) / sigma)^2)
return(density)
}
unnormalized.pdf(0.1)
unnormalized.pdf <- function(x, mu=0){
density <- exp(-0.5 * ( (x - mu) / sigma)^2)
return(density)
}
unnormalized.pdf(0.1)
unnormalized.pdf <- function(x, mu=0){
density <- exp(-0.5 * ( (x - mu) / sigma)**2)
return(density)
}
unnormalized.pdf(0.1)
bookdown::render_book(output_format = "bookdown::gitbook")
bookdown::render_book(output_format = "bookdown::gitbook")
render_book
bookdown::render_book
sessionInfo()
installed.packages()
install.packages("bookdown")
install.packages("Rtools")
R.version
